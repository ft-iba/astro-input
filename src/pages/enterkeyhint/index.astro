---
import AnchorBaseBlank from '@components/AnchorBaseBlank.astro';
import InputItemVertical from '@components/InputItemVertical.astro';
import Layout from '@layouts/Layout.astro';
import { Image } from 'astro:assets';

interface Screenshot {
  src: string;
  label: string;
}

const screenshotIosList: Screenshot[] = [
  {
    src: 'iphone14_ios_16.5_safari_1.PNG',
    label: 'iPhone14 iOS16.5 Safari',
  },
  {
    src: 'iphone14_ios_16.5_safari_2.PNG',
    label: 'iPhone14 iOS16.5 Safari',
  },
  {
    src: 'iphone14_ios_16.5_chrome_1.PNG',
    label: 'iPhone14 iOS16.5 Chrome',
  },
  {
    src: 'iphone14_ios_16.5_chrome_2.PNG',
    label: 'iPhone14 iOS16.5 Chrome',
  },
  {
    src: 'iphone_se2_ios_15.3.1_safari_1.PNG',
    label: 'iPhone SE2 iOS15.3.1 Safari',
  },
  {
    src: 'iphone_se2_ios_15.3.1_safari_2.PNG',
    label: 'iPhone SE2 iOS15.3.1 Safari',
  },
  {
    src: 'iphone_se2_ios_15.3.1_chrome_1.PNG',
    label: 'iPhone SE2 iOS15.3.1 Chrome',
  },
  {
    src: 'iphone_se2_ios_15.3.1_chrome_2.PNG',
    label: 'iPhone SE2 iOS15.3.1 Chrome',
  },
]
const screenshotAndroidList: Screenshot[] = [
  {
    src: 'galaxy_s22_android14_chrome_1.jpg',
    label: 'galaxy S22 Android14 Chrome',
  },
  {
    src: 'galaxy_s22_android14_chrome_2.jpg',
    label: 'galaxy S22 Android14 Chrome',
  },
]

---

<Layout>
	<section class="enterkeyhint">
		<h1 class="enterkeyhint__title">enterkeyhint</h1>
    <div class="enterkeyhint__detail">
      <AnchorBaseBlank
        as="p"
        href='https://developer.mozilla.org/ja/docs/Web/HTML/Reference/Global_attributes/enterkeyhint'
        label='enterkeyhint - HTML: ハイパーテキストマークアップ言語 | MDN'
      />
    </div>
    <form id="enterkeyhintSearch">
      <InputItemVertical title='enterkeyhint search'>
        <input
          type="text"
          name="search_hint"
          enterkeyhint="search"
          class="enterkeyhint__input"/>
          <!-- <textarea class="enterkeyhint__textarea" title="" value="" placeholder="" aria-label="検索" aria-autocomplete="list" autocapitalize="off" autocomplete="off" autocorrect="off" enterkeyhint="search" maxlength="2048" name="q" role="textbox" rows="1" spellcheck="false" tabindex="0"  aria-expanded="true"></textarea> -->
      </InputItemVertical>
    </form>
    <form id="enterkeyhintDone">
      <InputItemVertical title='enterkeyhint done'>
        <input
          type="text"
          name="search_done"
          enterkeyhint="done"
          class="enterkeyhint__input"/>
      </InputItemVertical>
    </form>
    <form id="enterkeyhintGo">
      <InputItemVertical title='enterkeyhint go'>
        <input
          type="text"
          name="search_go"
          enterkeyhint="go"
          class="enterkeyhint__input"/>
      </InputItemVertical>
    </form>
    <form id="enterkeyhintSend">
      <InputItemVertical title='enterkeyhint send'>
        <input
          type="text"
          name="search_send"
          enterkeyhint="send"
          class="enterkeyhint__input"/>
      </InputItemVertical>
    </form>

    <h2 class="enterkeyhint__sectionTitle">search 仮想キーボード iOS</h2>
    <div class="enterkeyhint__screenshot">
      <ul class="enterkeyhint__screenshotList">
        {screenshotIosList.map(({ src, label }) => (
          <li class="enterkeyhint__screenshotItem">
            <span class="enterkeyhint__screenshotItemLabel">
              { label }
            </span>
            <span class="enterkeyhint__screenshotItemImage">
              <Image
                src={import(`../../assets/images/${src}`)}
                alt=""
                class="enterkeyhint__screenshotItemImageSrc"
                data-js="openBlankImage"
              />
            </span>
          </li>
				))}
      </ul>
    </div>
    <h2 class="enterkeyhint__sectionTitle">search 仮想キーボード Android</h2>
    <div class="enterkeyhint__screenshot">
      <ul class="enterkeyhint__screenshotList">
        {screenshotAndroidList.map(({ src, label }) => (
          <li class="enterkeyhint__screenshotItem">
            <span class="enterkeyhint__screenshotItemLabel">
              { label }
            </span>
            <span class="enterkeyhint__screenshotItemImage">
              <Image
                src={import(`../../assets/images/${src}`)}
                alt=""
                class="enterkeyhint__screenshotItemImageSrc"
                data-js="openBlankImage"
              />
            </span>
          </li>
				))}
      </ul>
    </div>
	</section>
</Layout>

<script>
const onFormSubmit = () => {
  document.querySelectorAll('form').forEach(form => {
    const input = form.querySelector('input');

    if (!input) return;

    form.addEventListener('submit', e => {
      e.preventDefault();

      const hint = input.getAttribute('enterkeyhint');
      const value = input.value;

      switch (hint) {
        // case 'search':
        //   search(value);
        //   break;
        // case 'send':
        //   sendMessage(value);
        //   break;
        // case 'go':
        //   goToNextStep();
        //   break;
        default:
          alert(`${hint}: ${value}`);
        }
    });
  });
}

const onOpenBlankImage = () => {
  console.log('onOpenBlankImage');
  const imageList = document.querySelectorAll('img[data-js="openBlankImage"]');
  (imageList as NodeListOf<HTMLImageElement>).forEach(img => {
    console.log(img);
    img.addEventListener('click', () => {
      const src = img.src;
      console.log('click', src);
      if (src) {
        window.open(src, '_blank');
      }
    });
  });
}

const init = () => {
  onFormSubmit();
  onOpenBlankImage();
}

window.addEventListener('DOMContentLoaded', () => {
  init();
});
</script>

<style>
.enterkeyhint {
  max-width: 100vw;
	padding: var(--theme-gap-width);
}

.enterkeyhint__title {
	font-size: 1.6rem;
}

.enterkeyhint__sectionTitle {
	font-size: 1.2rem;
	margin-top: 3.2rem;
	position: relative;
	translate: -1.25rem 0;
	&::before {
		content: '・';
	}
}

.enterkeyhint__input {
  appearance: none;
  border: 1px solid var(--theme-color-divide);
  border-radius: 0.3rem;
  font-size: 16px;
  line-height: 1.5;
  max-width: 100%;
  padding: .3rem .4rem;
  &[data-size="small"] {
    margin-right: 1.2rem;
    width: 8.2rem;
  }
  &:not([data-size="small"]) {
    width: 20rem;
  }
}

.enterkeyhint__textarea {
  background: none;
  border: 1px solid var(--theme-color-divide);
  border-radius: 0.3rem;
  box-sizing: border-box;
  color: #202124;
  display: flex;
  flex: 1;
  grid-area: 1/1/2/2;
  font-family: Helvetica Neue,sans-serif;
  font-size: 16px;
  line-height: 24px;
  margin: 0;
  max-height: 144px;
  outline: none;
  overflow-y: auto;
  padding: .3rem .4rem;
  resize: none;
  white-space: normal;
  width: 100%;
  word-wrap: break-word;
  -webkit-tap-highlight-color: transparent;
}

.enterkeyhint__detail {
  margin-top: 2rem;
  margin-bottom: 2rem;
}

.enterkeyhint__screenshotList {
  display: flex;
  flex-wrap: wrap;
  gap: 2rem 1rem;
  margin-top: 2.2rem;
  max-width: 50rem;
}

.enterkeyhint__screenshotItem {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.4rem;
}
@media screen and (min-width: 672px) {
  .enterkeyhint__screenshotItem {
    width: 18rem;
  }
}

.enterkeyhint__screenshotItemLabel {
  font-size: 0.7rem;
  font-weight: 700;
}

.enterkeyhint__screenshotItemImage {
  position: relative;
  &::after {
    border: 1px solid var(--theme-color-divide);
    content: '';
    display: block;
    height: 100%;
    opacity: 0.3;
    position: absolute;
    inset: 0;
    pointer-events: none;
    width: 100%;
  }
}

.enterkeyhint__screenshotItemImageSrc {
  cursor: pointer;
  height: auto;
  transition: opacity 300ms var(--ease-in-out-quad);
  &:hover {
		opacity: 0.7;
	}
}
</style>